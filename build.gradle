plugins {
	id "groovy-gradle-plugin"
	id "com.gradle.plugin-publish" version "1.3.0"
	id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "2.1.2"
	id "com.diffplug.spotless" version "6.25.0"
}

processResources.dependsOn spotlessApply

spotless {
	groovyGradle {
		target '*.gradle', '**/*.gradle'
		greclipse()
	}
}

gitChangelogSemanticVersion {
	suffixSnapshotIfNotTagged = false
}

gradlePlugin {
	website = "https://github.com/tomasbjerre/conventional-release-gradle-plugin"
	vcsUrl = "https://github.com/tomasbjerre/conventional-release-gradle-plugin"
	plugins {
		matching { it.name == 'se.bjurr.gradle.conventional-release' }.configureEach {
			id = "se.bjurr.gradle.conventional-release"
			implementationClass = "SeBjurrGradleConventionalReleasePlugin"
			displayName = "Conventional Release Gradle Plugin"
			description = "Bundle of plugins and some Gradle DSL that can publish to Central, NPM and Plugin Portal"
			tags.set([
				"conventional-commits",
				"changelog",
				"publishing",
				"release"
			])
		}
	}
}

repositories {
	gradlePluginPortal()
	mavenCentral()
	mavenLocal()
}

task release(type: GradleBuild) {
	tasks = [
		'clean',
		'gitChangelogSemanticVersion',
		'commitNewVersionTask',
		'build',
		'publishToMavenLocal',
		'publishPlugins',
		'gitChangelog',
		'commitChangelogTask',
	]
}

/**
 * Dependencies needed by the plugin in src/main/groovy
 */
dependencies {
	implementation "com.gradleup.shadow:shadow-gradle-plugin:8.3.2"
	implementation "io.github.gradle-nexus:publish-plugin:2.0.0"
	implementation "com.gradle.publish:plugin-publish-plugin:1.3.0"
	implementation "se.bjurr.gitchangelog:git-changelog-gradle-plugin:2.1.2"
}


/**
 * Update README with config
 */
def defaultConfig = file('src/main/groovy/se.bjurr.gradle.conventional-release.gradle')
		.text
		.takeBetween('// ---- default config ----')
		.stripIndent()
def newReadme = file('README.md')
		.text
		.replaceAll("(?s)(.*// ---- default config ----).*(// ---- default config ----.*)", "\$1$defaultConfig\$2")
file('README.md').write(newReadme)
